services:
  postgres:
    image: postgres:17
    restart: always
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: edgeserver
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres -d postgres"]
      interval: 5s
      timeout: 5s
      retries: 5
  minio:
    image: minio/minio:latest
    command: server --console-address ":9001" /mnt/data
    ports:
      - "9000:9000"
      - "9001:9001"
    healthcheck:
      test: ['CMD', 'curl', '-f', 'http://127.0.0.1:9000/minio/health/live']
      interval: 10s
      start_interval: 1s
      start_period: 10s
    entrypoint: >
      /bin/sh -c '
        isAlive() { curl -sf http://127.0.0.1:9000/minio/health/live; }    # check if Minio is alive
        minio $0 "$@" --quiet & echo $! > /tmp/minio.pid                   # start Minio in the background
        while ! isAlive; do sleep 0.1; done                                # wait until Minio is alive
        mc alias set minio http://127.0.0.1:9000 minioadmin minioadmin     # setup Minio client
        mc mb minio/edgeserver || true                                    # create a test bucket
        mc mb minio/screenshots || true                                    # create a test bucket
        mc mb minio/car || true                                    # create a test bucket
        mc anonymous set public minio/edgeserver                          # make the test bucket public
        mc anonymous set public minio/screenshots                          # make the test bucket public
        kill -s INT $(cat /tmp/minio.pid) && rm /tmp/minio.pid             # stop Minio
        while isAlive; do sleep 0.1; done                                  # wait until Minio is stopped
        echo $0 "$@"
        exec minio $0 "$@"                                                 # start Minio in the foreground
      '
  rabbitmq:
    image: rabbitmq:3-management
    ports:
      - "5672:5672"
      - "15672:15672"
    environment:
      - RABBITMQ_DEFAULT_USER=user
      - RABBITMQ_DEFAULT_PASS=password

  jaeger:
    image: jaegertracing/jaeger:2.4.0
    ports:
      - "16686:16686"
      - "4317:4317"
      - "4318:4318"
      - "5778:5778"
      - "9411:9411"
